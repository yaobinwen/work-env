- hosts: all
  name: >
    Provision the target machine with the Docker image and the container as
    a containerized work environment (in order to isolate different work
    environmental settings, e.g., the user name, user email, and credentials).
  gather_facts: yes
  tasks:
    - include_role:
        name: work-env-user
      vars:
        ansible_become: yes

    - include_role:
        name: tools
        tasks_from: docker-container
      vars:
        ansible_become: yes

    - include_role:
        name: tmux
      vars:
        ansible_become: yes
        tmux_conf_dir: "/tmp/yaobin"

    - include_role:
        name: cli-prompt
      vars:
        ansible_become: yes
        ansible_become_user: "{{work_env_user_name}}"

    - include_role:
        name: gpg
        tasks_from: import
      vars:
        ansible_become: yes
        ansible_become_user: "{{work_env_user_name}}"
        gpg_home_dir: "/tmp/yaobin/.gnupg"
        gpg_key_path: "/tmp/yaobin/.gpg/sub_signing.key"

    - command:
        argv:
          - gpg
          - "--homedir"
          - "/tmp/yaobin/.gnupg"
          - "--list-secret-keys"
          - "--with-colons"
      register: gpg_secret_keys
      vars:
        ansible_become: yes
        ansible_become_user: "{{work_env_user_name}}"

    - set_fact:
        gpg_signing_sub_key: "{{gpg_secret_keys.stdout | regex_search('ssb:-:.*::s::', multiline=True, ignorecase=True) | regex_search('[0-9A-F]{16}')}}"

    - include_role:
        name: git
      vars:
        ansible_become: yes

    - include_role:
        name: git
        tasks_from: configure
      vars:
        ansible_become: yes
        ansible_become_user: "{{work_env_user_name}}"

    - include_role:
        name: gpg
        tasks_from: config-tty
      vars:
        ansible_become: yes
        ansible_become_user: "{{work_env_user_name}}"

    - include_role:
        name: locales
      vars:
        ansible_become: yes
        locale_user_name: "{{work_env_user_name}}"

    - include_role:
        name: ssh
        tasks_from: install-bashrc.ssh-agent
      vars:
        ansible_become: yes
        ansible_become_user: "{{work_env_user_name}}"

    - include_role:
        name: terraform
      vars:
        ansible_become: yes

    - include_role:
        name: aws-cli
      vars:
        ansible_become: yes
        cache_dir: /tmp
